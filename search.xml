<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[时间同步项目笔记]]></title>
      <url>https://butlmy.github.io/2016/06/28/%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h1 id="一、影响PTP时钟同步的因素"><a href="#一、影响PTP时钟同步的因素" class="headerlink" title="一、影响PTP时钟同步的因素"></a>一、影响PTP时钟同步的因素</h1><p>网络中影响同步精度的因素有很多，软件实现相对硬件支持来说受误差影响更明显，主要包括：主从时钟频率的不一致、时间戳的精度、操作系统的延时、网络链路的不对称性、网络设备转发的延时（如路由器和交换机）、网络流量和负载的影响等。</p>
<ol>
<li>网络传输抖动误差</li>
<li>本地时钟频率漂移误差</li>
<li>同步间隔</li>
<li>网络拓扑结构</li>
</ol>
<h1 id="二、提高精度的方案"><a href="#二、提高精度的方案" class="headerlink" title="二、提高精度的方案"></a>二、提高精度的方案</h1><ol>
<li>时间戳标记位置<h3 id="介质无关层（MII）标记时间戳"><a href="#介质无关层（MII）标记时间戳" class="headerlink" title="介质无关层（MII）标记时间戳"></a>介质无关层（MII）标记时间戳</h3></li>
<li>为报文设置优先级</li>
<li>主从时钟频率调节<br>个系统时钟周期，加数寄存器的值就会累加到累加计数器当中，当32位累加计数器溢出时，纳秒累加寄存器的值就会累加到纳秒寄存器中，纳秒寄存器中的时间值大于1000000000时，秒寄存器的值加1，纳秒寄存器的值减1000000000，</li>
<li>基于划分时隙的的<br>在以太网驱动接口部分 开辟了时间戳记录通道，实时记录网络数据发送和接 收的时间</li>
<li>对clock drift的测量，认为短时间内是不变的，或者是根据时间稳定变化的p=p0+d*t，d是drift的变化率</li>
</ol>
<hr>
<h1 id="三、数据分析"><a href="#三、数据分析" class="headerlink" title="三、数据分析"></a>三、数据分析</h1><h2 id="移动平均滤波"><a href="#移动平均滤波" class="headerlink" title="移动平均滤波"></a>移动平均滤波</h2><p>对于一组采样点，用一个Ｎ 个点大小的条形窗口对其采样点进行平均值的计算，计算得到的值作为当前采样点的值，然后将窗口向下一个采样点移动一格，进行同样的计算。</p>
<h2 id="线性拟合"><a href="#线性拟合" class="headerlink" title="线性拟合"></a>线性拟合</h2><p>用线性拟合方法建立时钟漂移率数学模型，计算clock drift rate，用它来调整本地时间，当通信出现故障，也可以根基计算出来的offset来调整本地时钟，不对同步造成影响，并克服网络延迟和抖动对同步造成的影响（基于NTP 的时钟调整策略分析）<br>最小平方法（A Stable Clock Synchronization Based on Clock Drift Rate）输入数据：数组（localtime，offset）   输出：y=b0+b1*x，经过计算得到b0和b1，b1就是clock drift rate</p>
<h2 id="时钟偏差的补偿和时钟频率偏差的补偿"><a href="#时钟偏差的补偿和时钟频率偏差的补偿" class="headerlink" title="时钟偏差的补偿和时钟频率偏差的补偿"></a>时钟偏差的补偿和时钟频率偏差的补偿</h2><h3 id="凸包法"><a href="#凸包法" class="headerlink" title="凸包法"></a>凸包法</h3><h3 id="二阶卡尔曼滤波"><a href="#二阶卡尔曼滤波" class="headerlink" title="二阶卡尔曼滤波"></a>二阶卡尔曼滤波</h3><h3 id="单神经元自适应PID控制器对本地时钟频率进行控制"><a href="#单神经元自适应PID控制器对本地时钟频率进行控制" class="headerlink" title="单神经元自适应PID控制器对本地时钟频率进行控制"></a>单神经元自适应PID控制器对本地时钟频率进行控制</h3><hr>
<h1 id="四、其他方法"><a href="#四、其他方法" class="headerlink" title="四、其他方法"></a>四、其他方法</h1><ol>
<li>纯软件实现的ptp<br>（1）前面的offset和delay的获取采用ptpd的方法，但是后面收发数据时的时间戳采用硬件方法实现，需要硬件支持。<br>（2）只有两端网络节点有硬件支持，中间网络设备是通用设备。<br>（3）时间戳处理：linux内核让内核协议栈在接受到一个网络贞时，打上时间戳，将此时间戳与网络贞一起送到用户空间，在收到的报文中取出SCM_TIMESTAMP类型数据。<br>（4）PTPD和NTP的区别：PTP协议有follow_up报文，能准确的将sync报文发送时间发送给slave；ptp协议采用bmc算法，选取最佳主时钟，时钟 的质量、稳定性最佳<br>（5）影响软件实现ptp精度的因素：OS调度；内存管理；UDP、IP等协议的封装和解封；网卡控制器里的FIFO；总线仲裁</li>
<li>纯硬件实现的ptp<br>（1）FPGA实现（2）集成有PTP协议的网络收发硬件</li>
</ol>
<hr>
<h1 id="五、性能测试"><a href="#五、性能测试" class="headerlink" title="五、性能测试"></a>五、性能测试</h1><p>通过改变网络流量、主机负载、拓扑结构等条件来观察实验结果的变化。</p>
<ol>
<li>局域网测量<br>因为局域网未与外网相连，主机之间仅靠路由器通信，可以较好的排除网络链路不对称和网络流量、拓扑、突发随机事件等因素对实验结果的影响。实验方法是：两台主机上电启动后，指定一台作为主时钟，另一台为从时钟。直接修改本地时钟的时间，可能造成系统错误，所以一般采用锁相环的方法对频率进行修改，使偏移逐渐收敛。实验结果展示：绘制横坐标表示时间，纵坐标表示时间差offset的图像。</li>
<li>高网络流，高系统负载</li>
</ol>
<ul>
<li>增加从时钟系统负载：运行死循环程序，使CUP高速运转</li>
<li>增加网络流：从时钟向主时钟传送大文件</li>
<li>用网络发包工具，测试增加输入网络流和输出网络流时的情况</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello Kugou]]></title>
      <url>https://butlmy.github.io/2016/06/21/test/</url>
      <content type="html"><![CDATA[<p><img src="http://o92qbjxgp.bkt.clouddn.com/58pic_525054d56585d.jpg" alt="bird"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>https://butlmy.github.io/2016/06/21/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
